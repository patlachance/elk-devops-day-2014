input {
  collectd {
     type => "collectd"
     host => "192.168.1.10"
     typesdb => [ "/home/vagrant/logstash-1.4.0/vendor/collectd/types.db" ]
  }
  udp {
     type => "syslog"
     port => 514
  }
}

filter {
  if [type] == "syslog" {
    grok {
      patterns_dir => "./patterns"
      match => ["message","%{LOGBACK_SYSLOG}"]
    }
  }
}

filter {

  if [type] == "syslog" and ([classname] =~ /SearchRequest$/ or [classname] =~ /SellRequest$/) { 

   grok {
      match => ["log_msg","- %{GREEDYDATA:msg}"]
   }

   date {
      match => ["log_date","dd-MM-YYYY HH:mm:ss.SSS"]
   }
   }
}

filter {

   if [type] == "syslog" and ([classname] =~ /SearchRequest$/ or [classname] =~ /SellRequest$/) {

   kv {
      field_split => "&"
      source => "msg"
   }

   }
}

filter {

   if [type] == "syslog" and ([classname] =~ /SearchRequest$/ or [classname] =~ /SellRequest$/) {

   if [classname] =~ /SellRequest$/ {
      mutate { add_tag => "sell" }
   } else if [classname] =~ /SearchRequest$/ {
      mutate { add_tag => "search" }
   }

   mutate {    
      remove_field => [ "log_msg", "msg" ]
   }  

   mutate {
      convert => [ "id", "integer" ]
   }
   mutate {
      convert => [ "price", "float" ]
   }

   mutate {
      split => [ "options", "|" ]
   }

   geoip {
      source => "ip"
      database => "./GeoLiteCity.dat"
   }

   useragent {
      source => "ua"
      target => "useragent"
   }

  }

}

output { 

  stdout { codec => json }

  if [type] == "collectd" {
    elasticsearch { 
       cluster => "handson"
       port => 9400 
       index => "collectd-%{+YYYY.MM}"
    }
  } 

  if [type] == "syslog" {
    elasticsearch { 
       cluster => "handson"
       port => 9400
       index => "syslog-%{+YYYY.MM}"
    }
  }

}
